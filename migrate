#!/bin/bash

REPO="file:///home/kore/devel/restructure/svn-repo"
USER="/home/kore/devel/restructure/users.txt"

# Initial import of git repository for arbit trunk
if [ ! -d "import/" ]; then
    mkdir tmp
    cd tmp
    git svn init "$REPO/trunk" --no-metadata
    git config svn.authorsfile "$USER"
    git svn fetch
    cd ../

    # Copy repository into a new one get rid of the git-svn stuff
    git clone --no-hardlinks tmp/ import/
    rm -rf tmp
fi

rm -rf git

# Extract modules into their own repositories
for MODULE in ci faq importer jslint notification pdepend phpcs phpdoc phploc phpunit source tracker wiki ; do
	MODULE_PATH="git/module-$MODULE"
	git clone --no-hardlinks import/ "$MODULE_PATH"

	cd "$MODULE_PATH"
	git filter-branch --index-filter \
		'git ls-files -s |
			 sed -e "s-\(^.*\t\"*\)tests/modules_'$MODULE'_suite.php-\\1src/modules/'$MODULE'/tests/suite.php-" \
			 	 -e "s-\(^.*\t\"*\)tests/modules/'$MODULE'/\(.*\)\$-\\1src/modules/'$MODULE'/tests/\\2-" \
				 -e "s-\(^.*\t\"*\)src/modules/'$MODULE'/classes/\(.*\)\$-\\1src/modules/'$MODULE'/src/\\2-" |
			GIT_INDEX_FILE=$GIT_INDEX_FILE.new git update-index --index-info &&
			mv $GIT_INDEX_FILE.new $GIT_INDEX_FILE' HEAD
	git filter-branch -f --subdirectory-filter 'src/modules/'$MODULE HEAD
	git filter-branch -f --prune-empty HEAD
	git reset --hard
	git gc --aggressive
	git prune

    ../../findExternals "$REPO/src/modules/$MODULE" > externals.txt

    cd ../../
done

# Remove all modules and store as framework repository
git clone --no-hardlinks import/ git/framework/
cd git/framework
git filter-branch --tree-filter 'rm -rf tests/modules_* tests/modules/ src/modules/' HEAD

../../findExternals "$REPO/trunk" > externals.txt

cd ../../

# Clone framework into core repository
git clone --no-hardlinks git/framework/ git/module-core/

# Clone project dirs
for PROJECT in installer periodic phpcs phync vcs_wrapper xml ; do
	mkdir tmp
	cd tmp
	git svn init "$REPO/projects/$PROJECT/trunk" --no-metadata
	git config svn.authorsfile "$USER"
	git svn fetch
	cd ../

	git clone --no-hardlinks tmp/ "git/$PROJECT"
    ./findExternals "$REPO/projects/$PROJECT/trunk" > "git/$PROJECT/externals.txt"
	rm -rf tmp/
done

